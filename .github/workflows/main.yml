name: binary_bakery_CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  binary_bakery_CI:
    runs-on: ${{ matrix.os }}
    env:
      BUILD_TYPE: Release
    strategy:
      fail-fast: false
      matrix:
        # specify a specific compiler to build with each OS separately
        include:
          - platform_name: linux
            os: ubuntu-20.04
            cxx: g++-10
          - platform_name: macos
            os: macos-10.15
            cxx: clang++
          - platform_name: windows
            os: windows-2019
            cxx: msvc

    steps:
      - uses: actions/checkout@v2

      - name: Get VCPKG
        env:
          CXX: ${{ matrix.cxx }}
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        uses: actions/checkout@v2
        with:
          repository: 'microsoft/vcpkg'
          path: 'build/vcpkg'
          
      - name: Bootstrap VCPKG
        env:
          CXX: ${{ matrix.cxx }}
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build/vcpkg
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            ./bootstrap-vcpkg.bat
          else
            ./bootstrap-vcpkg.sh
          fi

          
      - name: Install dependencies
        env:
          CXX: ${{ matrix.cxx }}
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build/vcpkg
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            VCPKG_DEFAULT_TRIPLET=x64-windows-static
          fi
          ./vcpkg install zstd lz4 tomlplusplus fmt stb doctest

      - name: Configure CMake
        env:
          CXX: ${{ matrix.cxx }}
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            VCPKG_DEFAULT_TRIPLET=x64-windows-static
          fi
          cmake -S $GITHUB_WORKSPACE -B ${{github.workspace}}/build -DCMAKE_INSTALL_PREFIX:PATH=$GITHUB_WORKSPACE/artifacts -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/build/vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build & Install
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE --target Install

      - name: Test
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Use CTest to run tests
        run: ctest -C $BUILD_TYPE --output-on-failure

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: binary_bakery_${{ github.run_number }}_${{ matrix.platform_name }}
          path: ${{github.workspace}}/artifacts
